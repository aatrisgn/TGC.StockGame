import { Injectable } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { GameClient, GameRequest, GameResponse } from '../generated/autogenerated-client';

@Injectable({
  providedIn: 'root' // This ensures the service is a singleton
})
export class CurrentGameState {
  private gameId:string = "";
  private localStorageKey = "currentGameId"

  $gameProgressedEvent:Subject<GameResponse> = new Subject<GameResponse>()
  $newGameAddedEvent:Subject<GameResponse> = new Subject<GameResponse>()

  constructor() {
    console.log('Singleton service instance created');
  }

  setGameId(id:string): void {
    this.gameId = id;
    localStorage.setItem(this.localStorageKey, id);
  }

  getGameId(): string {
    return localStorage.getItem(this.localStorageKey)!;
  }

  emitProgressEvent(gameRequest:GameResponse){
    console.log("Trying to emit:")
    console.log(gameRequest)
    this.$gameProgressedEvent.next(gameRequest);
  }

  emitReloadGameEvent(gameRequest:GameResponse){
    this.$gameProgressedEvent.next(gameRequest);
  }

  emitNewGameEvent(gameRequest:GameResponse){
    this.$newGameAddedEvent.next(gameRequest);
  }
}
